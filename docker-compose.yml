services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: irep
    ports:
      - "8090:8080"
      - "8091:8000"
    volumes:
      - .:/workspace/irep
      - ./storage/logs:/workspace/irep/storage/logs
    env_file:
      - .env
    environment:
      DB_HOST: database
      DB_PORT: 3306
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      database:
        condition: service_healthy
    networks:
      - network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "2207:2207"
      - "2208:2208"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      app:
        condition: service_healthy
    networks:
      - network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  database:
    image: mariadb:latest
    container_name: irepDB
    ports:
      - "2209:3306"
    env_file:
      - docker/database.env
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - network
    restart: always
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  meilisearch:
    image: getmeili/meilisearch:v1.11
    container_name: meilisearch
    ports:
      - "7709:7700"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - msdata:/data.ms
      - ./docker/meilisearch/config.toml:/meilisearch_config.toml
    networks:
      - network
    restart: always
    command: ["meilisearch", "--config-file-path", "/meilisearch_config.toml"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6370:6379"
    env_file:
      - docker/redis.env
    volumes:
      - redisdata:/data
    networks:
      - network
    restart: always
    command: >
      sh -c "redis-server --requirepass $${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}
      --maxmemory $${REDIS_MAXMEMORY:?REDIS_MAXMEMORY variable is not set}
      --maxclients $${REDIS_MAXCLIENTS:?REDIS_MAXCLIENTS variable is not set}
      --maxmemory-policy allkeys-lru"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  dbdata:
  msdata:
  redisdata:

networks:
  network:
    driver: bridge

